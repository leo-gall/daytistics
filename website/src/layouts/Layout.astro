---
interface Props {
  title: string;
  description?: string;
}

import Navbar from '../components/Navbar.astro';

const { title, description = "Transform your life with our revolutionary mobile app" } = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <script src="https://unpkg.com/@phosphor-icons/web"></script>
    <title>{title}</title>
  </head>
  <body class="transition-colors duration-200">
    <div class="absolute top-4 right-4 z-50">
      <button
        id="theme-toggle"
        class="p-2 rounded-lg bg-gray-100 dark:bg-gray-700 text-gray-800 dark:text-white"
        aria-label="Toggle theme"
      >
        <i id="sun-icon" class="ph ph-sun hidden text-2xl"></i>
        <i id="moon-icon" class="ph ph-moon hidden text-2xl"></i>
      </button>
    </div>
    <Navbar />
    <slot />
    <script>
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();

      if (theme === 'light') {
        document.documentElement.classList.remove('dark');
      } else {
        document.documentElement.classList.add('dark');
      }

      window.localStorage.setItem('theme', theme);

      const handleToggleClick = () => {
        const element = document.documentElement;
        element.classList.toggle("dark");

        const isDark = element.classList.contains("dark");
        localStorage.setItem("theme", isDark ? "dark" : "light");
        updateIcons();
      }

      const updateIcons = () => {
        const isDark = document.documentElement.classList.contains("dark");
        document.getElementById("sun-icon").classList.toggle("hidden", isDark);
        document.getElementById("moon-icon").classList.toggle("hidden", !isDark);
      }

      document.getElementById("theme-toggle").addEventListener("click", handleToggleClick);
      updateIcons();
    </script>
  </body>
</html>

<style is:global>
  @tailwind base;
  @tailwind components;
  @tailwind utilities;

  :root {
    --color-primary: #10b981;
    --color-primary-dark: #059669;
  }

  body {
    @apply bg-white dark:bg-gray-800 text-gray-900 dark:text-white pt-16;
  }
</style>