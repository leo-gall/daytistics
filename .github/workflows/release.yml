name: iOS & Android Build and Deploy to Play Store for Release

on:
  release:
    types: [published]

env:
  FLUTTER_CHANNEL: "stable"
  RUBY_VERSION: "3.2.2"

jobs:
  build_ios:
    name: Build iOS
    runs-on: macos-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: 'daytistics/ios'

      - name: Clean up vendor
        working-directory: 'daytistics/ios'
        run: rm -rf vendor

      - name: Install Bundler Gems
        working-directory: 'daytistics/ios'
        run: bundle install

      - name: Run Flutter tasks and get pub packages
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version-file: 'daytistics/pubspec.yaml'
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Get Flutter Packages
        working-directory: ./daytistics
        run: flutter pub get

      - name: Install Bundler Gems
        working-directory: 'daytistics/ios'
        run: |
          bundle install
          bundle exec pod repo update  # Add this line

      # Remove the "Reinstall CocoaPods" step entirely

      - name: Pod Install
        working-directory: 'daytistics/ios'
        run: bundle exec pod install 

      - name: Clean Flutter build
        working-directory: ./daytistics
        run: flutter clean

      - name: Create .env file
        working-directory: ./daytistics
        run: touch .env

      - uses: maierj/fastlane-action@v3.1.0
        with:
          lane: 'release_app_store'
          subdirectory: daytistics/ios
          options: '{
            "version_number": ""${{ github.ref_name }} 
            "env_vars": ["SUPABASE_URL", "SUPABASE_ANON_KEY", "POSTHOG_API_KEY", "SUPABASE_AUTH_EXTERNAL_GOOGLE_CLIENT_ID", "SENTRY_DSN"]
            }'
        env:
          ASC_KEY_ID: ${{ secrets.ASC_KEY_ID }}
          ASC_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          ASC_KEY_P8_BASE64: ${{ secrets.ASC_KEY_P8_BASE64 }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          MATCH_GIT_BASIC_AUTHORIZATION: ${{ secrets.MATCH_GIT_BASIC_AUTHORIZATION }}
          APP_BUNDLE_ID: ${{ secrets.APP_BUNDLE_ID }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
          SUPABASE_AUTH_EXTERNAL_GOOGLE_CLIENT_ID: ${{ secrets.SUPABASE_AUTH_EXTERNAL_GOOGLE_CLIENT_ID }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}

   


  build_android:
    name: Build Android
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: ${{ env.RUBY_VERSION }}
          bundler-cache: true
          working-directory: 'daytistics/android'

      - name: Run Flutter tasks
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version-file: 'daytistics/pubspec.yaml'
          channel: ${{ env.FLUTTER_CHANNEL }}
          cache: true

      - name: Create google_service_account.json
        working-directory: daytistics
        run: |
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 }}" | base64 --decode > google_service_account.json

      - name: Create key.jks
        working-directory: daytistics
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_FILE_BASE64 }}" | base64 --decode > android/key.jks

      - name: Create key.properties
        working-directory: daytistics
        run: |
          cat <<EOF > android/key.properties
          storePassword=${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyPassword=${{ secrets.ANDROID_KEY_STORE_PASSWORD }}
          keyAlias=release
          storeFile=../key.jks
          EOF
        env:
          ANDROID_KEY_STORE_PASSWORD: ${{ secrets.ANDROID_KEY_STORE_PASSWORD }}

      - name: Create .env file
        working-directory: ./daytistics
        run: touch .env

      - uses: maierj/fastlane-action@v3.1.0
        with:
          lane: 'release_play_store'
          subdirectory: daytistics/android
          options: '{
            "version_number": ""${{ github.ref_name }} 
            "env_vars": ["SUPABASE_URL", "SUPABASE_ANON_KEY", "POSTHOG_API_KEY", "SUPABASE_AUTH_EXTERNAL_GOOGLE_CLIENT_ID", "SENTRY_DSN"]
            }'
        env:
          APP_PACKAGE_NAME: ${{ secrets.APP_PACKAGE_NAME }}
          SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
          SUPABASE_ANON_KEY: ${{ secrets.SUPABASE_ANON_KEY }}
          POSTHOG_API_KEY: ${{ secrets.POSTHOG_API_KEY }}
          SUPABASE_AUTH_EXTERNAL_GOOGLE_CLIENT_ID: ${{ secrets.SUPABASE_AUTH_EXTERNAL_GOOGLE_CLIENT_ID }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
 
