name: dev-checks
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  # flutter-analyze:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: subosito/flutter-action@v2

  #     - name: Install dependencies
  #       working-directory: ./daytistics
  #       run: flutter pub get
  #     - name: Create .env file
  #       working-directory: ./daytistics
  #       run: touch .env
  #     - name: Run built-in linter
  #       working-directory: ./daytistics
  #       run: flutter analyze
  #     - name: Run custom linter
  #       working-directory: ./daytistics
  #       run: dart run custom_lint

  # flutter-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: subosito/flutter-action@v2

  #     - name: Install dependencies
  #       working-directory: ./daytistics
  #       run: flutter pub get
  #     - name: Create .env file
  #       working-directory: ./daytistics
  #       run: touch .env
  #     - name: Run tests
  #       working-directory: ./daytistics
  #       run: flutter test

 supabase-test:
  runs-on: ubuntu-latest
  steps:
    - uses: actions/checkout@v4
    # - uses: actions/setup-node@v4
    #   with:
    #     node-version: 20
    
    - uses: denoland/setup-deno@v2
      with:
        deno-version: v2.x

    - name: Run Supabase Containers
      working-directory: ./daytistics
      run: npx supabase start

    - name: Storing Supabase secrets
      id: supabase-keys
      working-directory: ./daytistics
      run: npx supabase status -o env >> $GITHUB_OUTPUT

    - name: Clean environment variables
      id: clean-env
      shell: bash
      run: |
        # Remove starting and trailing double quotes from all secret variables and append them to $GITHUB_ENV
        echo "ANON_KEY=$(echo "${ANON_KEY}" | sed 's/^"//; s/"$//')" >> $GITHUB_ENV
        echo "API_URL=$(echo "${API_URL}" | sed 's/^"//; s/"$//')" >> $GITHUB_ENV
        echo "DB_URL=$(echo "${DB_URL}" | sed 's/^"//; s/"$//')" >> $GITHUB_ENV
        echo "GRAPHQL_URL=$(echo "${GRAPHQL_URL}" | sed 's/^"//; s/"$//')" >> $GITHUB_ENV
        echo "INBUCKET_URL=$(echo "${INBUCKET_URL}" | sed 's/^"//; s/"$//')" >> $GITHUB_ENV
        echo "JWT_SECRET=$(echo "${JWT_SECRET}" | sed 's/^"//; s/"$//')" >> $GITHUB_ENV
        echo "S3_PROTOCOL_ACCESS_KEY_ID=$(echo "${S3_PROTOCOL_ACCESS_KEY_ID}" | sed 's/^"//; s/"$//')" >> $GITHUB_ENV
        echo "S3_PROTOCOL_ACCESS_KEY_SECRET=$(echo "${S3_PROTOCOL_ACCESS_KEY_SECRET}" | sed 's/^"//; s/"$//')" >> $GITHUB_ENV
        echo "S3_PROTOCOL_REGION=$(echo "${S3_PROTOCOL_REGION}" | sed 's/^"//; s/"$//')" >> $GITHUB_ENV
        echo "SERVICE_ROLE_KEY=$(echo "${SERVICE_ROLE_KEY}" | sed 's/^"//; s/"$//')" >> $GITHUB_ENV
        echo "STORAGE_S3_URL=$(echo "${STORAGE_S3_URL}" | sed 's/^"//; s/"$//')" >> $GITHUB_ENV
        echo "STUDIO_URL=$(echo "${STUDIO_URL}" | sed 's/^"//; s/"$//')" >> $GITHUB_ENV
      env:
        ANON_KEY: ${{ steps.supabase-keys.outputs.ANON_KEY }}
        API_URL: ${{ steps.supabase-keys.outputs.API_URL }}
        DB_URL: ${{ steps.supabase-keys.outputs.DB_URL }}
        GRAPHQL_URL: ${{ steps.supabase-keys.outputs.GRAPHQL_URL }}
        INBUCKET_URL: ${{ steps.supabase-keys.outputs.INBUCKET_URL }}
        JWT_SECRET: ${{ steps.supabase-keys.outputs.JWT_SECRET }}
        S3_PROTOCOL_ACCESS_KEY_ID: ${{ steps.supabase-keys.outputs.S3_PROTOCOL_ACCESS_KEY_ID }}
        S3_PROTOCOL_ACCESS_KEY_SECRET: ${{ steps.supabase-keys.outputs.S3_PROTOCOL_ACCESS_KEY_SECRET }}
        S3_PROTOCOL_REGION: ${{ steps.supabase-keys.outputs.S3_PROTOCOL_REGION }}
        SERVICE_ROLE_KEY: ${{ steps.supabase-keys.outputs.SERVICE_ROLE_KEY }}

    - name: Ping edge function test using curl
      working-directory: ./daytistics
      run: curl -s http://127.0.0.1:54321/functions/v1/test
    

    - name: Run tests
      working-directory: ./daytistics
      run: deno test --allow-all
      env:
        SUPABASE_ANON_KEY: ${{ env.ANON_KEY }}
        SUPABASE_API_URL: ${{ env.API_URL }}
        SUPABASE_DB_URL: ${{ env.DB_URL }}
        SUPABASE_GRAPHQL_URL: ${{ env.GRAPHQL_URL }}
        SUPABASE_INBUCKET_URL: ${{ env.INBUCKET_URL }}
        SUPABASE_JWT_SECRET: ${{ env.JWT_SECRET }}
        SUPABASE_S3_PROTOCOL_ACCESS_KEY_ID: ${{ env.S3_PROTOCOL_ACCESS_KEY_ID }}
        SUPABASE_S3_PROTOCOL_ACCESS_KEY_SECRET: ${{ env.S3_PROTOCOL_ACCESS_KEY_SECRET }}
        SUPABASE_S3_PROTOCOL_REGION: ${{ env.S3_PROTOCOL_REGION }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ env.SERVICE_ROLE_KEY }}
        SUPABASE_STORAGE_S3_URL: ${{ env.STORAGE_S3_URL }}
        SUPABASE_STUDIO_URL: ${{ env.STUDIO_URL }}

        