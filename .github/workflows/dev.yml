name: dev-checks
on:
  push:
    branches:
      - dev
  pull_request:
    branches:
      - dev

jobs:
  # flutter-analyze:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: subosito/flutter-action@v2

  #     - name: Install dependencies
  #       working-directory: ./daytistics
  #       run: flutter pub get
  #     - name: Create .env file
  #       working-directory: ./daytistics
  #       run: touch .env
  #     - name: Run built-in linter
  #       working-directory: ./daytistics
  #       run: flutter analyze
  #     - name: Run custom linter
  #       working-directory: ./daytistics
  #       run: dart run custom_lint

  # flutter-test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #     - uses: subosito/flutter-action@v2

  #     - name: Install dependencies
  #       working-directory: ./daytistics
  #       run: flutter pub get
  #     - name: Create .env file
  #       working-directory: ./daytistics
  #       run: touch .env
  #     - name: Run tests
  #       working-directory: ./daytistics
  #       run: flutter test

  supabase-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Deno
        run: npm -g install deno

      - name: Run Supabase Containers
        working-directory: ./daytistics
        run: npx supabase start

      - name: Storing Supabase secrets
        id: supabase-keys
        working-directory: ./daytistics
        run: npx supabase status -o env >> $GITHUB_OUTPUT

      - name: Clean environment variables
        id: clean-env
        shell: bash
        run: |
          # Remove extra double quotes from all secret variables and append them to $GITHUB_ENV
          echo "SUPABASE_ANON_KEY=$(echo "${SUPABASE_ANON_KEY}" | sed 's/\"//g')" >> $GITHUB_ENV
          echo "SUPABASE_API_URL=$(echo "${SUPABASE_API_URL}" | sed 's/\"//g')" >> $GITHUB_ENV
          echo "SUPABASE_DB_URL=$(echo "${SUPABASE_DB_URL}" | sed 's/\"//g')" >> $GITHUB_ENV
          echo "SUPABASE_GRAPHQL_URL=$(echo "${SUPABASE_GRAPHQL_URL}" | sed 's/\"//g')" >> $GITHUB_ENV
          echo "SUPABASE_INBUCKET_URL=$(echo "${SUPABASE_INBUCKET_URL}" | sed 's/\"//g')" >> $GITHUB_ENV
          echo "SUPABASE_SERVICE_ROLE_KEY=$(echo "${SUPABASE_SERVICE_ROLE_KEY}" | sed 's/\"//g')" >> $GITHUB_ENV
          echo "SUPABASE_JWT_SECRET=$(echo "${SUPABASE_JWT_SECRET}" | sed 's/\"//g')" >> $GITHUB_ENV
          echo "SUPABASE_S3_PROTOCOL_ACCESS_KEY_ID=$(echo "${SUPABASE_S3_PROTOCOL_ACCESS_KEY_ID}" | sed 's/\"//g')" >> $GITHUB_ENV
          echo "SUPABASE_S3_PROTOCOL_ACCESS_KEY_SECRET=$(echo "${SUPABASE_S3_PROTOCOL_ACCESS_KEY_SECRET}" | sed 's/\"//g')" >> $GITHUB_ENV
          echo "SUPABASE_S3_PROTOCOL_REGION=$(echo "${SUPABASE_S3_PROTOCOL_REGION}" | sed 's/\"//g')" >> $GITHUB_ENV
          echo "SUPABASE_STORAGE_S3_URL=$(echo "${SUPABASE_STORAGE_S3_URL}" | sed 's/\"//g')" >> $GITHUB_ENV
          echo "SUPABASE_STUDIO_URL=$(echo "${SUPABASE_STUDIO_URL}" | sed 's/\"//g')" >> $GITHUB_ENV
        env:
          SUPABASE_ANON_KEY: ${{ steps.supabase-keys.outputs.SUPABASE_ANON_KEY }}
          SUPABASE_API_URL: ${{ steps.supabase-keys.outputs.API_URL }}
          SUPABASE_DB_URL: ${{ steps.supabase-keys.outputs.DB_URL }}
          SUPABASE_GRAPHQL_URL: ${{ steps.supabase-keys.outputs.GRAPHQL_URL }}
          SUPABASE_INBUCKET_URL: ${{ steps.supabase-keys.outputs.INBUCKET_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ steps.supabase-keys.outputs.SUPABASE_SERVICE_ROLE_KEY }}
          SUPABASE_JWT_SECRET: ${{ steps.supabase-keys.outputs.JWT_SECRET }}
          SUPABASE_S3_PROTOCOL_ACCESS_KEY_ID: ${{ steps.supabase-keys.outputs.SUPABASE_S3_PROTOCOL_ACCESS_KEY_ID }}
          SUPABASE_S3_PROTOCOL_ACCESS_KEY_SECRET: ${{ steps.supabase-keys.outputs.SUPABASE_S3_PROTOCOL_ACCESS_KEY_SECRET }}
          SUPABASE_S3_PROTOCOL_REGION: ${{ steps.supabase-keys.outputs.S3_PROTOCOL_REGION }}
          SUPABASE_STORAGE_S3_URL: ${{ steps.supabase-keys.outputs.STORAGE_S3_URL }}
          SUPABASE_STUDIO_URL: ${{ steps.supabase-keys.outputs.STUDIO_URL }}

      - name: Run tests
        working-directory: ./daytistics
        run: deno test --allow-all
        env:
          SUPABASE_ANON_KEY: ${{ env.SUPABASE_ANON_KEY }}
          SUPABASE_API_URL: ${{ env.SUPABASE_API_URL }}
          SUPABASE_DB_URL: ${{ env.SUPABASE_DB_URL }}
          SUPABASE_GRAPHQL_URL: ${{ env.SUPABASE_GRAPHQL_URL }}
          SUPABASE_INBUCKET_URL: ${{ env.SUPABASE_INBUCKET_URL }}
          SUPABASE_SERVICE_ROLE_KEY: ${{ env.SUPABASE_SERVICE_ROLE_KEY }}
          SUPABASE_JWT_SECRET: ${{ env.SUPABASE_JWT_SECRET }}
          SUPABASE_S3_PROTOCOL_ACCESS_KEY_ID: ${{ env.SUPABASE_S3_PROTOCOL_ACCESS_KEY_ID }}
          SUPABASE_S3_PROTOCOL_ACCESS_KEY_SECRET: ${{ env.SUPABASE_S3_PROTOCOL_ACCESS_KEY_SECRET }}
          SUPABASE_S3_PROTOCOL_REGION: ${{ env.SUPABASE_S3_PROTOCOL_REGION }}
          SUPABASE_STORAGE_S3_URL: ${{ env.SUPABASE_STORAGE_S3_URL }}
          SUPABASE_STUDIO_URL: ${{ env.SUPABASE_STUDIO_URL }}